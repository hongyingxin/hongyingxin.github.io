import{_ as i,c as a,aE as n,o as l}from"./chunks/framework.jiGApQmY.js";const g=JSON.parse('{"title":"搭建个人博客","description":"","frontmatter":{"sticky":1},"headers":[],"relativePath":"随笔/vlog.md","filePath":"随笔/vlog.md"}'),t={name:"随笔/vlog.md"};function e(p,s,h,k,r,d){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="搭建个人博客" tabindex="-1">搭建个人博客 <a class="header-anchor" href="#搭建个人博客" aria-label="Permalink to &quot;搭建个人博客&quot;">​</a></h1><p>最近一直想搭建一个属于自己的博客，既能记录学习过程，也能当做简历的一个亮点。静态站点主要有 Hexo、Hugo、VuePress、VitePress 等。作为一个 Vue 技术栈的开发者，我主要对比了 VuePress 和 VitePress 这两个框架。</p><h2 id="为什么选择-vitepress" tabindex="-1">为什么选择 VitePress？ <a class="header-anchor" href="#为什么选择-vitepress" aria-label="Permalink to &quot;为什么选择 VitePress？&quot;">​</a></h2><p>在对比 VuePress 和 VitePress 后，我选择了 VitePress，主要有以下几个原因：</p><ol><li><p><strong>更快的开发体验</strong>：</p><ul><li>VitePress 基于 Vite 构建，冷启动和热更新速度都比 VuePress 快很多</li><li>VuePress 基于 Webpack，在大型项目中构建速度较慢</li></ul></li><li><p><strong>更简洁的配置</strong>：</p><ul><li>VitePress 的配置更加直观，去掉了很多不必要的功能</li><li>VuePress 功能全面但配置较为复杂，有些功能可能永远用不到</li></ul></li><li><p><strong>更现代的技术栈</strong>：</p><ul><li>VitePress 默认使用 Vue 3 和 TypeScript</li><li>VuePress 2.x 虽然也支持 Vue 3，但生态不如 VitePress 新鲜</li></ul></li><li><p><strong>更小的打包体积</strong>：</p><ul><li>VitePress 打包后的体积明显小于 VuePress</li><li>这意味着更快的加载速度和更好的用户体验</li></ul></li></ol><p>虽然 VuePress 的生态更加丰富，插件也更多，但对于个人博客来说，VitePress 的简洁和性能优势更适合我的需求。而且Vue团队将重点转向了VitePress，VuePress 2.x 将不再维护。</p><h2 id="搭建过程" tabindex="-1">搭建过程 <a class="header-anchor" href="#搭建过程" aria-label="Permalink to &quot;搭建过程&quot;">​</a></h2><h3 id="_1-项目初始化" tabindex="-1">1. 项目初始化 <a class="header-anchor" href="#_1-项目初始化" aria-label="Permalink to &quot;1. 项目初始化&quot;">​</a></h3><p>首先创建一个新的项目文件夹，然后初始化项目：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1.使用你习惯的方式创建一个新文件夹</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入项目目录后执行：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 VitePress 和 Vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2.vitePress也附带一个命令行设置向导，可以帮组你构建一个基本项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><h3 id="_2-项目结构" tabindex="-1">2. 项目结构 <a class="header-anchor" href="#_2-项目结构" aria-label="Permalink to &quot;2. 项目结构&quot;">​</a></h3><p>创建以下目录结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>my-blog/</span></span>
<span class="line"><span>├── docs/</span></span>
<span class="line"><span>│ ├── .vitepress/</span></span>
<span class="line"><span>│ │ └── config.mts # 配置文件</span></span>
<span class="line"><span>│ ├── articles/ # 文章目录</span></span>
<span class="line"><span>│ │ └── index.md # 文章列表</span></span>
<span class="line"><span>│ └── index.md # 首页</span></span>
<span class="line"><span>└── package.json</span></span></code></pre></div><h3 id="_3-启动并运行" tabindex="-1">3. 启动并运行 <a class="header-anchor" href="#_3-启动并运行" aria-label="Permalink to &quot;3. 启动并运行&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  &quot;scripts&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &quot;docs:dev&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress dev docs&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &quot;docs:build&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress build docs&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &quot;docs:preview&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress preview docs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_4-部署到-github-pages" tabindex="-1">4.部署到 GitHub Pages <a class="header-anchor" href="#_4-部署到-github-pages" aria-label="Permalink to &quot;4.部署到 GitHub Pages&quot;">​</a></h3><h4 id="github-pages简介" tabindex="-1">Github Pages简介 <a class="header-anchor" href="#github-pages简介" aria-label="Permalink to &quot;Github Pages简介&quot;">​</a></h4><p>GitHub Pages 是一项静态站点托管服务，它直接从 GitHub 上的仓库获取 HTML、CSS 和 JavaScript 文件，（可选）通过构建过程运行文件，然后发布网站。</p><h4 id="部署流程" tabindex="-1">部署流程 <a class="header-anchor" href="#部署流程" aria-label="Permalink to &quot;部署流程&quot;">​</a></h4><ol><li><strong>创建仓库</strong></li></ol><ul><li>登录 GitHub 账号，点击右上角的 &quot;+&quot; 号，选择 &quot;New repository&quot;</li><li>输入<code>userName.github.io</code>作为仓库名称，将<code>userName</code>替换为你的GitHub用户名，例如：如果用户名是<code>caixunkun</code>，则仓库名称为<code>caixunkun.github.io</code></li><li>选择 &quot;Public&quot; 或 &quot;Private&quot; 取决于你的需求。从 2020 年开始，GitHub Pages 支持从公共和私有仓库发布网站。但建议选择Public，因为私有仓库需要付费。</li></ul><ol start="2"><li><strong>配置 GitHub Actions</strong></li></ol><p>在项目根目录创建 <code>.github/workflows/deploy.yml</code>：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy VitePress site to Pages</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">       branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置要部署的分支</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     workflow_dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许手动触发部署</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   permissions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     contents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">read</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     pages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">write</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     id-token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">write</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">       runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">       steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Checkout</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Setup Node</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/setup-node@v4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">             node-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">             cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             rm -rf node_modules package-lock.json</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             npm install</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             npm install @rollup/rollup-linux-x64-gnu  # 解决 rollup 依赖问题</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Build</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             npm run docs:build</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             touch docs/.vitepress/dist/.nojekyll  # 防止 GitHub Pages 忽略以下划线开头的文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Upload artifact</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/upload-pages-artifact@v3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">             path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docs/.vitepress/dist</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">       needs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">build</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">       runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">       environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">         name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">github-pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">         url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ steps.deployment.outputs.page_url }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">       steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/deploy-pages@v4</span></span></code></pre></div><ol start="3"><li><strong>仓库设置</strong></li></ol><ul><li>进入仓库的 Settings &gt; Pages</li><li>在 &quot;Build and deployment&quot; 部分： <ul><li>Source: 选择 &quot;GitHub Actions&quot;</li><li>确保 HTTPS 已启用</li></ul></li></ul><ol start="4"><li><strong>VitePress 配置</strong><ul><li>由于使用 <code>username.github.io</code> 作为仓库名，需要在 <code>docs/.vitepress/config.mts</code> 中设置正确的 base：</li></ul><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  base: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 对于 username.github.io 仓库使用 &#39;/&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ... 其他配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li><li><strong>推送和部署</strong><ul><li>提交代码到 master 分支：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;update: site content&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre></div><ul><li>GitHub Actions 会自动触发部署流程</li><li>可以在仓库的 Actions 标签页查看部署进度</li><li>部署完成后，访问 <code>https://username.github.io</code> 查看网站</li></ul></li></ol><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>在搭建过程中遇到了一些问题，记录下来供大家参考：</p><h4 id="_1-github-pages-部署问题" tabindex="-1">1. GitHub Pages 部署问题 <a class="header-anchor" href="#_1-github-pages-部署问题" aria-label="Permalink to &quot;1. GitHub Pages 部署问题&quot;">​</a></h4><p>一开始部署到 GitHub Pages 时遇到了一些困难：</p><ul><li><strong>Actions 构建失败</strong>：原来是缺少了 rollup 的依赖。</li><li><strong>页面空白</strong>：base 路径配置错误导致。</li><li><strong>样式丢失</strong>：忘记添加 .nojekyll 文件。</li><li><strong>部署后无法访问</strong>：需要等待几分钟让变更生效。</li></ul><p><strong>解决方案</strong>：</p><ol><li>在 workflow 中添加 rollup 依赖安装。</li><li>正确配置 base 路径。</li><li>确保添加 .nojekyll 文件。</li><li>确保仓库名称格式正确，检查 GitHub Pages 设置是否正确，等待几分钟让变更生效。</li></ol><h4 id="_2-markdown-编写效率" tabindex="-1">2. Markdown 编写效率 <a class="header-anchor" href="#_2-markdown-编写效率" aria-label="Permalink to &quot;2. Markdown 编写效率&quot;">​</a></h4><p>为了提高写作效率，我在 VS Code 中安装了几个非常好用的插件：</p><ul><li><strong>Markdown All in One</strong>：提供了很多快捷键。</li><li><strong>Paste Image</strong>：直接粘贴图片，特别方便。</li><li><strong>markdownlint</strong>：帮助规范 Markdown 格式。</li></ul><h4 id="_3-后续计划" tabindex="-1">3. 后续计划 <a class="header-anchor" href="#_3-后续计划" aria-label="Permalink to &quot;3. 后续计划&quot;">​</a></h4><ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_0" disabled="true"><label for="cbx_0"> 自定义主题样式</label></li><li class="task-list-item"><input type="checkbox" id="cbx_1" disabled="true"><label for="cbx_1"> 添加评论功能</label></li><li class="task-list-item"><input type="checkbox" id="cbx_2" disabled="true"><label for="cbx_2"> 优化移动端显示</label></li><li class="task-list-item"><input type="checkbox" id="cbx_3" disabled="true"><label for="cbx_3"> 添加文章目录</label></li><li class="task-list-item"><input type="checkbox" id="cbx_4" disabled="true"><label for="cbx_4"> 优化 SEO</label></li></ul><h4 id="_4-总结" tabindex="-1">4. 总结 <a class="header-anchor" href="#_4-总结" aria-label="Permalink to &quot;4. 总结&quot;">​</a></h4><p>搭建博客的过程虽然遇到了一些问题，但整体来说还是比较顺利的。VitePress 的开发体验确实很好，特别是热更新的速度让人惊喜。</p><p>希望这个博客能够督促自己多写文章，记录学习过程，也希望能帮助到其他想要搭建博客的朋友。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress 官方文档</a></li><li><a href="https://docs.github.com/cn/pages" target="_blank" rel="noreferrer">GitHub Pages 部署指南</a></li></ul>`,44)]))}const E=i(t,[["render",e]]);export{g as __pageData,E as default};
